name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly security scan on Mondays at 2 AM

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Bandit security scan
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt -o bandit-report.txt || true
    
    - name: Run Safety dependency check
      run: |
        safety check --json --output safety-report.json || true
        safety check --output safety-report.txt || true
    
    - name: Run Pydantic security validation
      run: |
        python -c "
        from pydantic import BaseModel, ValidationError
        from pydantic.fields import Field
        import json
        
        # Test Pydantic security features
        class SecureModel(BaseModel):
            name: str = Field(..., min_length=1, max_length=100)
            email: str = Field(..., regex=r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$')
            age: int = Field(..., ge=0, le=150)
        
        # Test validation
        try:
            model = SecureModel(name='Test', email='test@example.com', age=25)
            print('✅ Pydantic security validation working')
        except ValidationError as e:
            print(f'❌ Pydantic validation failed: {e}')
            exit(1)
        "
    
    - name: Check for hardcoded secrets
      run: |
        # Check for common secret patterns
        if grep -r "password.*=.*['\"]" . --exclude-dir=.git --exclude-dir=venv --exclude-dir=__pycache__; then
          echo "⚠️  Potential hardcoded passwords found"
        else
          echo "✅ No hardcoded passwords found"
        fi
        
        if grep -r "api_key.*=.*['\"]" . --exclude-dir=.git --exclude-dir=venv --exclude-dir=__pycache__; then
          echo "⚠️  Potential hardcoded API keys found"
        else
          echo "✅ No hardcoded API keys found"
        fi
        
        if grep -r "secret.*=.*['\"]" . --exclude-dir=.git --exclude-dir=venv --exclude-dir=__pycache__; then
          echo "⚠️  Potential hardcoded secrets found"
        else
          echo "✅ No hardcoded secrets found"
        fi
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          bandit-report.txt
          safety-report.json
          safety-report.txt

  dependency-audit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install pip-audit
      run: |
        python -m pip install pip-audit
    
    - name: Run pip-audit
      run: |
        pip-audit --format json --output pip-audit-report.json || true
        pip-audit --output pip-audit-report.txt || true
    
    - name: Upload audit reports
      uses: actions/upload-artifact@v3
      with:
        name: dependency-audit-reports
        path: |
          pip-audit-report.json
          pip-audit-report.txt
